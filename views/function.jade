extends layout

block content
  script(src="/javascripts/ethers-5.1.umd.min.js")
  script(src="https://code.jquery.com/jquery-3.6.0.min.js")
  script.
    const args1 = !{JSON.stringify(fun.inputs)}

    async function wrappedRun() {
      try {
        if(typeof window.ethereum === "undefined"){
          alert("Please install Metamask");
          window.location.href = "https://metamask.io";
        }
        window.ethereum.enable();
        await run();
      } catch(e){
        $("#response").val(e.toString());
      }
    }

    async function run() {
      try{
        const args2 = args1.map(a => $("#"+a.name).val());
        if("#{fun.stateMutability}" === "pure" || "#{fun.stateMutability}" === "view" || "#{fun.stateMutability}" !== "payable"){
          $("#response").html("Transaction Pending...");
          const response = await contract["#{fun.name}"](...args2);
          console.log(response);
          $("#response").html(JSON.stringify(response));
        }
        else {
          //payable
          $("#response").removeClass('invisible');
          $("#response").html("Transaction Pending...");
          const response = await contract["#{fun.name}"](...args2, { value: ethers.utils.parseEther($("#value").val()) });
          const txReceipt = await response.wait();
          console.log(txReceipt);
          $("#response").html("Transaction successful \n\n"+JSON.stringify(txReceipt));
        }
      }
      catch(e){
        console.log(e, e.toString());
        $("#response").removeClass('invisible');
        $("#response").html(e.toString());
      }
    }


  nav.navbar.navbar-dark.p-4(style="background-color:transparent;")
      .container-fluid.position-relative
          button.btn.btn-light.btn-lg.position-absolute.top-50.end-0 Connect Wallet
  include ./walletSetup
  .center-container.d-flex.justify-content-center
    .container.form-container
      .row.gy-5.position-relative
        div.position-absolute.top-0.end-0.w-auto
          a.links(href="/"+address+"?abi="+abiEncoded+"&network="+network) #[i(data="close")]
            i.bi.bi-arrow-left.me-2
            | Back to all functions
        .col-12
          span.fs-3 Function : 
          span.fs-4= fun.name.replace( /([A-Z])/g, " $1" )
        .col-12
          each inp in fun.inputs 
            .mb-3
                label.form-label.fs-5.mb-4= inp.name.replace( /([A-Z])/g, " $1" )
                input.form-control.form-control-lg.mb-5(placeholder=inp.name.replace( /([A-Z])/g, " $1" )+"("+fun.type+")" id=inp.name)

          if fun.stateMutability === "payable"
            .mb-3
                label.form-label.fs-5.mb-4 This function expects a payment
                input.form-control.form-control-lg.mb-5(placeholder="Amount to send in Ethers" id="value")
          .mb-3
            span.fs-5.mb-4 Execute Transaction 
            span ( Fill in the parameters and tap run )
          .mb-5.d-grid.gap-2.col-3
            button.btn.btn-light.btn-lg( onclick="wrappedRun()") Run
          .mb-3
            .alert.alert-light.invisible.bg-transparent.text-white.overflow-auto(role='alert' id="response")
          .mb-3.mt-5.d-grid.gap-2.col-4.mx-auto
            a.btn.btn-outline-light.btn-lg(href="/new") Explore a new contract 
